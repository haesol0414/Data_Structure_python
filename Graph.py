


#210913

	# 그래프 (Graph)
	# 연결 데이터를 저장할 수 있는 자료구조
	# 연결 관계를 컴퓨터로 표현하기 위한 자료구조이다.

	# 그래프의 용도
	# 자료구조는 데이터 사이의 관계에 따라 어느것이 더 효율적인지 따져본 후 선택해야한다. 
	# 앞과 뒤라는 관계를 저장하고 싶으면 배열이나 링크드 리스트, 계층 관계를 저장하고 싶으면 트리를 사용하면 되는데,
	# 그래프는 데이터 간의 연결관계를 저장하고 싶을 때 유용하게 쓰인다. 
	# (ex. 페이스북 알만한 친구 추천, 위치에서 가장 빠른 경로 찾기)

	# 그래프 용어
	# 링크드 리스트와 같이 그래프도 노드를 하나의 데이터 단위로 활용한다. = 그래프 노드
	# 그래프에서 노드들 사이에 있는 연결 관계를 '엣지' 라고 한다.
	# (A, B)엣지 / (B, A)엣지
	# 두 데이터가 엣지가 존재할 때, 서로 '인접해있다'고 표현한다. 반대로 직접적인 엣지가 없다면 '인접해있지 않다'라는 말과 같다.
	# 두 데이터가 인접해있지는 않지만, 다른 하나의 공통된 데이터로 엣지가 연결되어 있다면, 인접해있지 않은 두 데이터를 연결해주는 엣지들을 '경로' 라고 한다.
	# 경로에 있는 모든 엣지의 수는 '거리'라고 한다. 거리가 가장 적은 경로가 최단경로이다.
	# 한 노드에서 시작해서 같은 노드에서 끝나는 것을 '싸이클'이라고 한다. (한 노드에서 시작해서 같은 노드로 돌아오는 경로)
	# '차수'는 한 노드에 연결된 엣지의 갯수를 말한다.

	# 방향 그래프
	# 그래프의 엣지는 연결되어있을 뿐만 아니라 방향 그래프로도 나타낼 수 있다. (ex. 인스타그램 팔로우)
	# 방향 그래프에서는 엣지들이 방향을 갖기 때문에, 엣지가 양방향이 아닐 수도 있다.
	# 방향 그래프에서 경로에도 방향이 있는데, 쌍방향이 아닐 수도 있기 때문에 어떤 데이터에 한해서는 경로가 아예 없을 수도 있다.
	# 방향 그래프에서 차수는 출력차수와 입력차수로 나뉜다.
	# 노드에서 나가는 엣지의 수(ex. 팔로잉)를 출력 차수, 들어오는 엣지의 수(ex. 팔로워)를 입력 차수라고 한다.

	# 가중치 그래프
	# 엣지에 특정 숫자값을 지정
	# 경로의 거리 개념이 바뀐다. 가중치 그래프에서 거리는 경로에 있는 모든 엣지 가중치의 합이다.



#210914

	# 지하철 역 노드
	class StationNode:
		def __init__(self, name, num_exits):
			self.name = name
			self.num_exits = num_exits

	# 지하철 역 노드 인스턴스 생성
	station_0 = StationNode("교대역", 14)
	station_1 = StationNode("사당역", 14)
	station_2 = StationNode("종로3가역", 14)
	station_3 = StationNode("서울역", 14)

	# 노드들을 리스트에 저장하기
	stations = [station_0, station_1, station_2, station_3]

	# 노드들을 딕셔너리에 저장하기
	stations = {
				"교대역": station_0
				"사당역": station_1
				"종로3가역": station_2
				"서울역": station_3
				}
    # 단, 이 방법을 쓸 때는 키가 중복되지 않도록 주의해야 한다.



    # 엣지 구현 : 인접 행렬
    # 인접 : 두 노드가 연결 되었다. 인접해있다.
    # 행렬 : 2차원 배열. 2차원 리스트. ( = 리스트 안에 리스트가 있다. )
    # 즉 인접 행렬이란, 노드들의 연결관계를 나타내는 2차원 리스트.
    # 인덱스를 이용해 표현된 2차원 배열에서 인접해있다면 1, 인접해있지 않다면 0을 표시한다.
    # 가중치가 있는 그래프라면, 1대신에 가중치 값을 저장하면 된다. 
    # 방향이 있는 그래프라면, 방향이 있는 엣지는 1로, 그렇지 않은 엣지는 0으로 표기하면 된다.
    # 각 노드들을 리스트에 저장해 고유 정수 인덱스를 준다.
    # 노드 수 X 노드 수 크기의 행렬을 만든다.
    # 노드들의 엣지 유무 혹은 가중치에 따라 행렬의 요소를 채운다.



    # 엣지 구현 : 인접 리스트
    # 그래프 노드가 연결된 노드들에 대한 레퍼런스를 저장한다.
    # 방향 그래프에서 엣지가 떠나는 노드의 인접 리스트에만 엣지가 들어가는 노드를 저장해준다.
    # 여러개의 노드가 있고 하나의 노드는 각자 자신이 인접한 노드들에 대한 레퍼런스를 저장하고 있는 것이다.
    

















